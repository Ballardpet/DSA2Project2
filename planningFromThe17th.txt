Now notes for simulation
- use a fifo and priority queue
- every single event is an arrival or a departure
- maybe make event class. maybe.















have to produce a simulation

simulator and analytical model are the main classes

main.cpp will create an instance of simulator
- simulator will have a method simulate(). different than the constructor. does everything you need

main.cpp also creates an instance of analytical model
- tells it to calculate apriori statistic


difference between analytical model and simulator (I think)
- pretty sure that analytical model just uses the input to calculate everything
- pretty sure the simulator runs a bunch of samples randomly with the inputted shit an then does math on the result



m = number of service channels
lambda = avg number of arrivals per unit time
mu = average number of customers  we can serve per unit time